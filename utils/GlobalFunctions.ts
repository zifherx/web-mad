import { IService, NumerParseResult } from "@/interfaces";
import { Metadata } from "next";

export const parseCounterValue = (
  finalNumber: string | number
): NumerParseResult => {
  if (typeof finalNumber === "number") {
    return {
      isNumber: true,
      numericValue: finalNumber,
      originalValue: finalNumber,
    };
  }

  const stringValue = finalNumber.toString();

  const match = stringValue.match(/^([^0-9]*)?([0-9]+(?:\.[0-9]+)?)(.*)?$/);

  if (match) {
    const [, prefixSymbol = "", numberPart, suffixSymbol = ""] = match;
    const numericValue = parseFloat(numberPart);
    const symbol = (prefixSymbol + suffixSymbol).trim();
    return {
      isNumber: false,
      numericValue,
      symbol: symbol || undefined,
      originalValue: finalNumber,
    };
  }

  return {
    isNumber: false,
    numericValue: 0,
    symbol: stringValue,
    originalValue: finalNumber,
  };
};

export const createWhatsappChatLink = (
  celular: string,
  mensaje: string
): string => {
  const message = encodeURIComponent(mensaje);
  return `https://wa.me/51${celular}?text=${message}`;
};

export const METADATA: Metadata = {
  title: {
    template: "%s | Marketing Al DÃ­a",
    default: "MAD Website",
  },
  description: "Generated by create next app",
  creator: "Ziphonex Tech",
  generator: "Clean Native Code",
  applicationName: "MAD Website",
  referrer: "origin-when-cross-origin",
  formatDetection: {
    email: false,
    address: false,
    telephone: false,
  },
  robots: {
    index: true,
    follow: true,
    nocache: true,
  },
  alternates: {
    canonical: "https://www.marketingaldia.net",
    languages: {
      "es-PE": "/es-PE",
    },
  },
  verification: {
    google: "google",
  },
};

export const getRandomServices = (servicios: IService[]): IService[] => {
  if (servicios.length <= 4) {
    return [...servicios];
  }

  const servicesCopy = [...servicios];
  const randomServices: IService[] = [];

  for (let i = 0; i < 4; i++) {
    const randonIndex = Math.floor(Math.random() * servicesCopy.length);
    randomServices.push(servicesCopy[randonIndex]);
    servicesCopy.splice(randonIndex, 1);
  }

  return randomServices;
};
